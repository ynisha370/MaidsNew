{
  "meta": {
    "project": "Custom Cleaning Service Booking System",
    "date": "2025-10-04",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "This project delivers a custom booking system for a cleaning service company comprising a customer web portal, an admin dashboard, and a mobile app for cleaners. The system supports online bookings, customer account management, payment processing, notifications, and comprehensive scheduling and order tracking features.",
  "core_goals": [
    "Provide an intuitive online booking experience for customers with guest checkout option.",
    "Enable efficient order management, pricing control, and staff assignment through the admin dashboard.",
    "Equip cleaners with a mobile app to manage jobs, clock in/out, update job status, and track earnings.",
    "Integrate Stripe for seamless payment processing for both customers and cleaner payouts.",
    "Implement automated SMS and email notifications for booking confirmations, reminders, and status updates.",
    "Prevent scheduling conflicts and ensure workload balancing with an intelligent scheduling engine.",
    "Allow comprehensive tracking of orders with real-time updates for customers, admins, and cleaners."
  ],
  "key_features": [
    "Customer Web Portal featuring online booking, guest checkout, account management, and order tracking.",
    "Admin Dashboard including order management, staff assignment tools, pricing and billing controls, invoicing, and reporting.",
    "Mobile App for cleaners providing job viewing, task assignments, clock in/out, ETA updates, client communication, digital wallet, and payment history.",
    "Payment Integration using Stripe with automatic and scheduled payment processing.",
    "Notification System utilizing Twilio and Amazon SES for automated SMS and email reminders and real-time job status notifications.",
    "Scheduling Engine with date/time slot booking, anti-overbooking logic, automatic cleaner assignment, schedule conflict prevention, and workload balancing.",
    "Order Tracking portal presenting job progress updates and timeline visualization for all user roles.",
    "Authentication API for user registration, login, Google OAuth, and user management.",
    "Service Management API to handle both standard and a-la-carte cleaning services.",
    "Dynamic Pricing API based on house size, frequency, and room pricing.",
    "Booking API to create and manage customer bookings.",
    "Calendar Integration API with Google Calendar sync for booking management.",
    "Admin API for promo code and report management."
  ],
  "user_flow_summary": [
    "Customers register or login (optionally via Google OAuth), browse services, select standard or a-la-carte options, check pricing based on house size and service frequency, and make bookings via the web portal using Stripe payment.",
    "Customers receive SMS/email confirmations and reminders about their bookings and can track order status through a dedicated portal.",
    "Admins login to the dashboard to manage orders, assign staff, control pricing, create promo codes, view reports, and oversee billing and invoicing.",
    "Cleaners login to the mobile app to view assigned jobs, clock in/out, provide ETA updates, communicate with clients, and review earnings/digital wallet.",
    "The scheduling engine automatically manages available time slots, prevents overbooking, assigns cleaners, and balances workload.",
    "Admin and customer notifications trigger automatically upon booking creation, status updates, and reminders.",
    "Admins access reports and system data for operational insights, while customers and cleaners have a streamlined flow for bookings and job management."
  ],
  "validation_criteria": [
    "User registration, login, and authentication flows work securely with Google OAuth support.",
    "Booking creation validates dates, prevents schedule conflicts, and confirms availability in real-time.",
    "Pricing calculations dynamically adjust according to house size, service frequency, and selected rooms.",
    "Stripe payment integration processes payments successfully for bookings and cleaner payouts.",
    "Admin dashboard functionalities including promo code management, staff assignment, pricing controls, and reporting operate as expected.",
    "Mobile app enables cleaners to log in, view jobs, clock in/out, update statuses, and view earnings accurately.",
    "Notification system reliably sends SMS and email confirmations, reminders, and status updates.",
    "Calendar integration syncs booking data with Google Calendar to reflect accurate schedules and availability.",
    "Customer order tracking portal displays real-time job progress and timeline visualization."
  ],
  "code_summary": {
    "tech_stack": [
      "Python",
      "FastAPI",
      "MongoDB",
      "React.js",
      "Flutter",
      "Stripe",
      "Twilio",
      "Google APIs",
      "JWT",
      "Pydantic"
    ],
    "features": [
      {
        "name": "Authentication API",
        "description": "User registration, login, Google OAuth, and user management",
        "files": [
          "backend/server.py"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Authentication API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/auth/register": {
              "post": {
                "summary": "Register new user",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "User registered successfully"
                  }
                }
              }
            },
            "/api/auth/login": {
              "post": {
                "summary": "Login user",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "User logged in successfully"
                  }
                }
              }
            },
            "/api/auth/me": {
              "get": {
                "summary": "Get current user info",
                "security": [
                  {
                    "BearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Current user information"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Service Management API",
        "description": "Manage standard and a-la-carte cleaning services",
        "files": [
          "backend/server.py"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Service Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/services": {
              "get": {
                "summary": "Get all services",
                "responses": {
                  "200": {
                    "description": "List of all services"
                  }
                }
              }
            },
            "/api/services/standard": {
              "get": {
                "summary": "Get standard services",
                "responses": {
                  "200": {
                    "description": "List of standard services"
                  }
                }
              }
            },
            "/api/services/a-la-carte": {
              "get": {
                "summary": "Get a-la-carte services",
                "responses": {
                  "200": {
                    "description": "List of a-la-carte services"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Pricing API",
        "description": "Dynamic pricing calculation based on house size, frequency, and room-based pricing",
        "files": [
          "backend/server.py"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Pricing API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/pricing/{house_size}/{frequency}": {
              "get": {
                "summary": "Get pricing for house size and frequency",
                "parameters": [
                  {
                    "name": "house_size",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string",
                      "enum": [
                        "1000-1500",
                        "1500-2000",
                        "2000-2500",
                        "2500-3000",
                        "3000-3500",
                        "3500-4000",
                        "4000-4500",
                        "5000+",
                        "small",
                        "medium"
                      ]
                    }
                  },
                  {
                    "name": "frequency",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string",
                      "enum": [
                        "one_time",
                        "weekly",
                        "bi_weekly",
                        "monthly"
                      ]
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Pricing information"
                  }
                }
              }
            },
            "/api/room-pricing": {
              "get": {
                "summary": "Get room pricing information",
                "responses": {
                  "200": {
                    "description": "Room pricing details"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Booking API",
        "description": "Create and manage customer bookings for cleaning services",
        "files": [
          "backend/server.py"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Booking API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/bookings": {
              "post": {
                "summary": "Create new booking",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "service_id": {
                            "type": "string"
                          },
                          "customer_email": {
                            "type": "string"
                          },
                          "customer_name": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string"
                          },
                          "time": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Booking created successfully"
                  }
                }
              },
              "get": {
                "summary": "Get user bookings",
                "security": [
                  {
                    "BearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "List of user bookings"
                  }
                }
              }
            },
            "/api/bookings/{booking_id}": {
              "get": {
                "summary": "Get specific booking",
                "parameters": [
                  {
                    "name": "booking_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "security": [
                  {
                    "BearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Booking details"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Payment API",
        "description": "Payment processing with Stripe integration",
        "files": [
          "backend/server.py"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Payment API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/customer/payment-methods": {
              "get": {
                "summary": "Get customer payment methods",
                "security": [
                  {
                    "BearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "List of payment methods"
                  }
                }
              },
              "post": {
                "summary": "Create payment method",
                "security": [
                  {
                    "BearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Payment method created"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Admin API",
        "description": "Administrative functions including promo codes, reports, and user management",
        "files": [
          "backend/server.py"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Admin API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/admin/promo-codes": {
              "get": {
                "summary": "Get all promo codes",
                "responses": {
                  "200": {
                    "description": "List of promo codes"
                  }
                }
              },
              "post": {
                "summary": "Create promo code",
                "responses": {
                  "200": {
                    "description": "Promo code created"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Calendar Integration API",
        "description": "Google Calendar integration for booking management",
        "files": [
          "backend/server.py",
          "backend/services/google_calendar_service.py"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Calendar Integration API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/time-slots": {
              "get": {
                "summary": "Get available time slots",
                "parameters": [
                  {
                    "name": "date",
                    "in": "query",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Available time slots"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Notification API",
        "description": "SMS and email notifications using Twilio and email services",
        "files": [
          "backend/server.py",
          "backend/services/twilio_sms_service.py",
          "backend/services/email_service.py"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Notification API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/validate-promo-code": {
              "post": {
                "summary": "Validate promo code",
                "responses": {
                  "200": {
                    "description": "Promo code validation result"
                  }
                }
              }
            }
          }
        }
      }
    ]
  }
}
