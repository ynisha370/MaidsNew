{
  "tech_stack": [
    "Python",
    "FastAPI",
    "MongoDB",
    "React.js",
    "Flutter",
    "Stripe",
    "Twilio",
    "Google APIs",
    "JWT",
    "Pydantic"
  ],
  "features": [
    {
      "name": "Authentication API",
      "description": "User registration, login, Google OAuth, and user management",
      "files": ["backend/server.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Authentication API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/auth/register": {
            "post": {
              "summary": "Register new user",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"},
                        "password": {"type": "string"},
                        "first_name": {"type": "string"},
                        "last_name": {"type": "string"}
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "User registered successfully"
                }
              }
            }
          },
          "/api/auth/login": {
            "post": {
              "summary": "Login user",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"},
                        "password": {"type": "string"}
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "User logged in successfully"
                }
              }
            }
          },
          "/api/auth/me": {
            "get": {
              "summary": "Get current user info",
              "security": [{"BearerAuth": []}],
              "responses": {
                "200": {
                  "description": "Current user information"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Service Management API",
      "description": "Manage standard and a-la-carte cleaning services",
      "files": ["backend/server.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Service Management API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/services": {
            "get": {
              "summary": "Get all services",
              "responses": {
                "200": {
                  "description": "List of all services"
                }
              }
            }
          },
          "/api/services/standard": {
            "get": {
              "summary": "Get standard services",
              "responses": {
                "200": {
                  "description": "List of standard services"
                }
              }
            }
          },
          "/api/services/a-la-carte": {
            "get": {
              "summary": "Get a-la-carte services",
              "responses": {
                "200": {
                  "description": "List of a-la-carte services"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Pricing API",
      "description": "Dynamic pricing calculation based on house size, frequency, and room-based pricing",
      "files": ["backend/server.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Pricing API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/pricing/{house_size}/{frequency}": {
            "get": {
              "summary": "Get pricing for house size and frequency",
              "parameters": [
                {
                  "name": "house_size",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "enum": ["1000-1500", "1500-2000", "2000-2500", "2500-3000", "3000-3500", "3500-4000", "4000-4500", "5000+", "small", "medium"]
                  }
                },
                {
                  "name": "frequency",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "enum": ["one_time", "weekly", "bi_weekly", "monthly"]
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Pricing information"
                }
              }
            }
          },
          "/api/room-pricing": {
            "get": {
              "summary": "Get room pricing information",
              "responses": {
                "200": {
                  "description": "Room pricing details"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Booking API",
      "description": "Create and manage customer bookings for cleaning services",
      "files": ["backend/server.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Booking API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/bookings": {
            "post": {
              "summary": "Create new booking",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "service_id": {"type": "string"},
                        "customer_email": {"type": "string"},
                        "customer_name": {"type": "string"},
                        "date": {"type": "string"},
                        "time": {"type": "string"}
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Booking created successfully"
                }
              }
            },
            "get": {
              "summary": "Get user bookings",
              "security": [{"BearerAuth": []}],
              "responses": {
                "200": {
                  "description": "List of user bookings"
                }
              }
            }
          },
          "/api/bookings/{booking_id}": {
            "get": {
              "summary": "Get specific booking",
              "parameters": [
                {
                  "name": "booking_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "security": [{"BearerAuth": []}],
              "responses": {
                "200": {
                  "description": "Booking details"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Payment API",
      "description": "Payment processing with Stripe integration",
      "files": ["backend/server.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Payment API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/customer/payment-methods": {
            "get": {
              "summary": "Get customer payment methods",
              "security": [{"BearerAuth": []}],
              "responses": {
                "200": {
                  "description": "List of payment methods"
                }
              }
            },
            "post": {
              "summary": "Create payment method",
              "security": [{"BearerAuth": []}],
              "responses": {
                "200": {
                  "description": "Payment method created"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Admin API",
      "description": "Administrative functions including promo codes, reports, and user management",
      "files": ["backend/server.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Admin API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/admin/promo-codes": {
            "get": {
              "summary": "Get all promo codes",
              "responses": {
                "200": {
                  "description": "List of promo codes"
                }
              }
            },
            "post": {
              "summary": "Create promo code",
              "responses": {
                "200": {
                  "description": "Promo code created"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Calendar Integration API",
      "description": "Google Calendar integration for booking management",
      "files": ["backend/server.py", "backend/services/google_calendar_service.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Calendar Integration API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/time-slots": {
            "get": {
              "summary": "Get available time slots",
              "parameters": [
                {
                  "name": "date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Available time slots"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Notification API",
      "description": "SMS and email notifications using Twilio and email services",
      "files": ["backend/server.py", "backend/services/twilio_sms_service.py", "backend/services/email_service.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Notification API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/validate-promo-code": {
            "post": {
              "summary": "Validate promo code",
              "responses": {
                "200": {
                  "description": "Promo code validation result"
                }
              }
            }
          }
        }
      }
    }
  ]
}